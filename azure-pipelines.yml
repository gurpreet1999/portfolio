trigger:
  branches:
    include:
      - main

variables:
- group: aws-secrets       
- group: docker-secrets  



stages:

- stage: Terraform
  displayName: 'Provision Infra'
  jobs:
  - job: TerraformApply
    pool:
      name: mypool
    steps:
    - checkout: self

    - script: |
        cd terraform
        terraform init
        terraform apply -auto-approve
        echo "[webserver]" > ../ansible/inventory.ini
        terraform output -raw public_ip >> ../ansible/inventory.ini
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)


- stage: DockerBuildAndPush
  dependsOn: Terraform
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildAndPush
    pool:
      name: mypool
    steps:
    - checkout: self
    - script: |
        cd portfolio
        docker build -t $(DOCKER_USERNAME)/portfolio-site:latest .
        echo "$(DOCKER_PASSWORD)" | docker login -u "$(DOCKER_USERNAME)" --password-stdin
        docker push $(DOCKER_USERNAME)/portfolio-site:latest
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)

# --- STAGE 3: Ansible Deployment ---
- stage: Deploy
  dependsOn: DockerBuildAndPush
  displayName: 'Deploy to EC2 with Ansible'
  jobs:
  - job: DeployJob
    pool:
      name: mypool
    steps:
    - checkout: self

    - task: DownloadSecureFile@1
      name: downloadSSHKey
      inputs:
        secureFile: 'ok.pem'

    - script: |
        chmod 600 $(downloadSSHKey.secureFilePath)
        ansible-playbook -i ansible/inventory.ini ansible/deploy.yml \
          --private-key $(downloadSSHKey.secureFilePath) \
          -u ubuntu
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)

